// Code generated by "stringer -output=enum_strings.go -type=HardwareType,SensorType,Unit"; DO NOT EDIT.

package core

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UnknownHardwareType-0]
	_ = x[SuperIO-1]
	_ = x[CPU-2]
	_ = x[GPU-3]
	_ = x[TBalancer-4]
	_ = x[HeatMaster-5]
	_ = x[HDD-6]
	_ = x[RAM-7]
	_ = x[Network-8]
	_ = x[Memory-9]
	_ = x[Storage-10]
	_ = x[Motherboard-11]
	_ = x[Battery-12]
	_ = x[Energy-13]
}

const _HardwareType_name = "UnknownHardwareTypeSuperIOCPUGPUTBalancerHeatMasterHDDRAMNetworkMemoryStorageMotherboardBatteryEnergy"

var _HardwareType_index = [...]uint8{0, 19, 26, 29, 32, 41, 51, 54, 57, 64, 70, 77, 88, 95, 101}

func (i HardwareType) String() string {
	if i < 0 || i >= HardwareType(len(_HardwareType_index)-1) {
		return "HardwareType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _HardwareType_name[_HardwareType_index[i]:_HardwareType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UnknownSensorType-0]
	_ = x[Voltage-1]
	_ = x[Clock-2]
	_ = x[Temperature-3]
	_ = x[Load-4]
	_ = x[Fan-5]
	_ = x[Flow-6]
	_ = x[Control-7]
	_ = x[Level-8]
	_ = x[Power-9]
	_ = x[SmallData-10]
	_ = x[Throughput-11]
	_ = x[Data-12]
	_ = x[Factor-13]
}

const _SensorType_name = "UnknownSensorTypeVoltageClockTemperatureLoadFanFlowControlLevelPowerSmallDataThroughputDataFactor"

var _SensorType_index = [...]uint8{0, 17, 24, 29, 40, 44, 47, 51, 58, 63, 68, 77, 87, 91, 97}

func (i SensorType) String() string {
	if i < 0 || i >= SensorType(len(_SensorType_index)-1) {
		return "SensorType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SensorType_name[_SensorType_index[i]:_SensorType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UnknownUnit-0]
	_ = x[Volt-1]
	_ = x[Megahertz-2]
	_ = x[Celsius-3]
	_ = x[Percentage-4]
	_ = x[RevolutionsPerMinute-5]
	_ = x[LitersPerHour-6]
	_ = x[Watts-7]
	_ = x[Gigabytes-8]
	_ = x[Megabytes-9]
	_ = x[KilobytesPerSecond-10]
}

const _Unit_name = "UnknownUnitVoltMegahertzCelsiusPercentageRevolutionsPerMinuteLitersPerHourWattsGigabytesMegabytesKilobytesPerSecond"

var _Unit_index = [...]uint8{0, 11, 15, 24, 31, 41, 61, 74, 79, 88, 97, 115}

func (i Unit) String() string {
	if i < 0 || i >= Unit(len(_Unit_index)-1) {
		return "Unit(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Unit_name[_Unit_index[i]:_Unit_index[i+1]]
}
